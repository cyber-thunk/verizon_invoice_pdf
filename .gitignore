# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib60/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Flake8 caching
.flake8

# MyPy caching
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static solver
.pytype/

# Cython debug symbols
cython_debug/

# Virtual environment
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyderworkspace

# Rope project settings
.ropeproject

# KDevelop project settings
*.kdev4

# Editor-specific files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# Log files
*.log
logs/

# Local configuration files
local_settings.py
config.ini

# Your custom ignores
######################

# Ignore anything in the archive directory
archive/

# Ignore anything in the output_csvs directory
output_csvs/

# Ignore any PDF in the same directory as .py files (typically the root if .gitignore is there)
# If you have .py files in subdirectories and want to ignore PDFs next to them,
# this pattern works if the .gitignore is in the root.
# If you only want to ignore PDFs in the *root* directory, use / J.pdf
*.pdf